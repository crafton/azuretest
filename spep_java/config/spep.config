#
# ESOE Java SP configuration file
#
# For assistance please visit http://www.esoeproject.org
#

###########################################################################################################
#
# Deployment specific configuration
####

# KeyStore 1
keystorePath=${spep.data}/config/spepKeystore.ks
keystorePassword=7fcb3a8fe43b5f58fb1e
spepKeyAlias=168c84056f43df42
spepKeyPassword=16db51cf46706aefb52a
metadataKeyAlias=3ccfe10d699e24b7

# The unique identifier of the authenticating ESOE.
esoeIdentifier=https://esoe-qa.qut.edu.au

# The unique identifier of the service.
spepIdentifier=http://attributes.azure.qut.edu.au

# The URL to retrieve the metadata document from
metadataUrl=https://esoe-qa.qut.edu.au/esoemanager/metadata/internal

# Description of the service
serverInfo=Test SPEP for Azure

# Unique identifier of this service node
nodeIdentifier=1

# Indicies of this service node
attributeConsumingServiceIndex=1
assertionConsumerServiceIndex=1
authzCacheIndex=1

# Address of the service in use without any application path e.g. https://myserver.company.com or https://myotherserver.company.com:8443 NOT https://myserver.company.com/myapp/
serviceHost=http://attributes.azure.qut.edu.au

# ip addresses of this host SPEP
ipAddresses=104.210.94.186

# Default URL of the service
defaultURL=http://attributes.azure.qut.edu.au

# specify cookies to clear when am authentication session is destroyed
# # strings are of the format: cookie_name [space] cookie_domain [space] cookie_path
# # the cookie_domain should be the service name followed by the TLD. e.g. servicename.mydomain.com
# # the cookie_path represents the directory scope of the cookie. If you're not sure, use a /
logoutClearCookie.1=

disableSPEPStartup=false
disablePolicyEnforcement=false


# Configure for shared cache
# # Use either single server, master/slave OR sentinels. You cannot use more than one at the same time.
# # If more than one is enabled, SPEP will revert to local cache.
useRedisCache=true
#
# ######### Redis Single Server Setup ###########
# # Use single server setup
useSingleServer=true
#
# # Should be of the format address:port
redisAddress=10.0.0.8:6379
#
# # Redis credentials
redisPassword=
#
# ######### Redis Clustering ###########
# # Use one of the clustering models below
#
# ### Configure sentinels ###
useSentinel=false
#
# # Name of the master redis server
redisSentinelMasterName=
#
# # Comma separated list of sentinels in the form of - address:port
redisSentinelAddresses=
#
# ### Configure Master/Slave without Sentinel ####
useMasterSlave=
#
# # Redis master server
redisMasterAddress=
#
# # Comma separated list of slaves in the form of - address:port
redisSlaveAddresses=
#
# ### Configure AWS ElastiCache ###
useAwsElasticache=false
#
# # sets cluster state scan interval in milliseconds
awsClusterScanInterval=
#
# # Comma separated list of aws nodes in the form of - address:port
awsClusterNodes=
#


###########################################################################################################
#
# You should not need to edit anything below this line, advanced changes only
####

# Is the SPEP configured in lazy initialization mode
lazyInit=false

# deny | permit - Lazy Init default mode, if a lazyinit-resource is not matched what action should the filter take on access to the resource (inverted when there is a match as specified by resources below)
lazyInitDefaultAction=deny

# Forced Initialization Queries. MUST start from lazyInit-resource-1 and MUST progress in numerical order upto a maximum value of 10000 (lazyInit-resource-10000)
# This is only populated when SPEP is acting in a lazy mode, regex patterns may be applied here
# Extreme caution to carefully validate your web application access requirements is recommended with the system is in lazyInit mode
# Name/Value parameters from the query string make up part of the matching, /secure.jsp.* should be used to match for example /secure.jsp?custID=1234
#
# Values here should only contain the path and query string of your application, eg for https://myspep.company.org/myapp you would enter /secure.jsp.* to match any request for resources
# located at https://myspep.company.org/myapp/secure.jsp

# SSO web application redirect (relative)
ssoRedirect=/spep/sso?redirectURL={0}

# authentication token names
spepTokenName=spepSession
spepTokenPath=/
spepTokenDomain=attributes.azure.qut.edu.au

# authentication token names
spepTokenName=spepSession
# Identifier name for site wide identifier indicating ESOE knows about this users session
commonDomainTokenName=_saml_idp_qa_omgthiscookieismessingwithlazyinit

# Interval in seconds after which to retry the SPEP Startup request, if startup fails
startupRetryInterval=20

# interval in seconds between polling the metadata URL for the metadata document
metadataInterval=120

# allowed time in seconds that a document will remain valid from the time of creation
allowedTimeSkew=60000

# time in seconds between polling the identifier cache for expired identifiers
identifierCacheInterval=3600

# time in seconds that an identifier will remain active
identifierCacheTimeout=36000

# Time that sessions which have yet to complete an authentication event are considered valid
sessionCacheTimeout=3600

# Time in seconds that session cache cleanup will run looking for expired unauthenticated sessions
# and sessions which have expired as dictated by the ESOE
sessionCacheInterval=30

# Default authorization policy to apply when due to problems with PDP or other unusal situations occurs access control result can't be computed
defaultPolicyDecision=deny
